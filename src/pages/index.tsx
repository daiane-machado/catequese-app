import { GetServerSideProps } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import styles from '../../styles/Home.module.scss'
import { MainCard } from '../components/MainCard'
import { Header } from '../components/Header'
import { useGlobalContext } from '../provider'
import { SimpleCard } from '../components/SimpleCard'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import Dropdown from '../components/Dropdown'



export default function Home({data}: any) {
  
  const { catechisms, updateDatas, setUpdateDatas } = useGlobalContext()
  
  const router = useRouter()
  
  //updateDatas === true ? refreshData() : null

  
  
  function refreshData () {
    router.replace(router.asPath)
    console.log('Fiz refresh')
    //setUpdateDatas(true)
  }


  useEffect(() => {
    refreshData();
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [updateDatas]);
  
  //const [ listCatechim, setListCatechim] = useState(catechisms)
  
 /*  const refreshData = () => {
    router.replace(router.asPath)
  } */
    
  /* if( !catechisms) {
    refreshData()
    //setListCatechim(data)
  } */
  //console.log(catechisms.map((item) => {item.ref})))
  const listCatechim = catechisms
  //console.log(listCatechim)
 // const y = (listCatechim.filter((item: any )=> item.ref["@ref"].id === '362857419143905360').map((catechism: any )=> catechism))[0].data
 // console.log(y)
 

  data.sort(function(a: { data: any | number }, b: { data: any | number }) {
    const timeA = new Date(`${a.data.date}T${a.data.time}`)
    const timeB = new Date(`${b.data.date}T${b.data.time}`)
    return  timeB.getTime() - timeA.getTime();
  })
  
  
 /*  const handleEventCatechism = (eventCatechism: any,) => {
    //console.log(eventCatechism.data.title)
    //event?.preventDefault()
  } */
  
  //const x = (data.filter((item : any) => item.ref["@ref"].id === '363472680440037457').map((catechism: any )=> catechism.data))
  
 
  const listDateTitle:  {date: Date, title: string }[] =[]
  data.map((item: any) =>{
    listDateTitle.push({date : new Date(`${item.data.date}T${item.data.time}`), title : item.data.title})
  })
  const date = new Date()
  const currentMonth = (date.getMonth() + 1) < 9 ? `0${(date.getMonth() + 1)}` : (date.getMonth() + 1)
  const currentMonthName = date.toLocaleString("pt-BR", { month: "long" })
 
  const nextEventDates = listDateTitle.filter((item: any) => item.date > date).map((item : any) => (item))
  const nextEvent = nextEventDates[nextEventDates.length - 1]
  

  //
  
  //console.log(data)

  const { filterDatas, setFilterDatas } = useGlobalContext()
  const lowerSerarch = filterDatas.toLowerCase()
  const catechism = data.filter((item: any) => item.data.title.toLowerCase().includes(lowerSerarch) || item.data.description.toLowerCase().includes(lowerSerarch))
    
  return (
    
    <div className={styles.wrapper}>
      {filterDatas ? <Dropdown dataCatechism={catechism}/> : null}
      <Head>
        <title> Minha Catequese</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header showButton={true} showSearch={true} dataCatechism={data}/>

      <main className={styles.container} onClick={()=> {setFilterDatas('')}}>
        <div className={styles.nextEvent}  >
            {data.filter((item: any) => item.data.title == nextEvent.title ).map((catechism : any) => (
              <div key={catechism.data.id} >
                <Link href={`http://localhost:3001/${catechism.ref["@ref"].id}`}>

                  <MainCard title={catechism.data.title}
                    description={catechism.data.description}
                    date={catechism.data.date}
                    time={catechism.data.time} />
                </Link>
              </div>))
            }
        </div>
        
        <div className={styles.otherEvents}>
          <div className={styles.textMonthEvents}>
            <span >{currentMonthName}</span>
            <Link href={'/listEvents'}>{'Outros eventos>>'}</Link>
          </div>
        </div>

        <div className={`${styles.list} ${styles.listMonth}`}>
          {data.filter((item: any) => item.data.date.substring(5,7) === currentMonth ).map((catechism: any, indice: number) =>
              <div key={catechism.data.id} >
                <Link href={`http://localhost:3001/${catechism.ref["@ref"].id}`}>

                  <SimpleCard 
                    title={catechism.data.title}
                    date={catechism.data.date}
                    />
                </Link>
              </div>)
          }
        </div>
      
     
      </main>

    

    </div>
  )
}

export async function getServerSideProps() {

  const res = await fetch('http://localhost:3001/api/catechism/catechism')
  const { data } = await res.json()
 
  return { props: data }
} 