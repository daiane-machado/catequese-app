import Head from 'next/head'
import Link from 'next/link'
import styles from '../../styles/Home.module.scss'
import { MainCard } from '../components/MainCard'
import { Header } from '../components/Header'
import { useGlobalContext } from '../provider'
import { SimpleCard } from '../components/SimpleCard'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import Dropdown from '../components/Dropdown'
import Footer from '../components/Footer'
import {signIn, signOut, useSession} from "next-auth/react"
import Image from 'next/image'

export default function Home({ data }: any) {

  const { updateDatas } = useGlobalContext()
  const router = useRouter()
   
  function refreshData() {
    router.replace(router.asPath)
    console.log('Fiz refresh')
  }

  useEffect(() => {
    refreshData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [updateDatas]);

  data.sort(function (a: { data: any | number }, b: { data: any | number }) {
    const timeA = new Date(`${a.data.date}T${a.data.time}`)
    const timeB = new Date(`${b.data.date}T${b.data.time}`)
    return timeB.getTime() - timeA.getTime();
  })


  const listDateTitle: { date: Date, title: string }[] = []
  data.map((item: any) => {
    listDateTitle
      .push({
        date: new Date(`${item.data.date}T${item.data.time}`),
        title: item.data.title
      })
  })
  const date = new Date()
  const currentMonth = (date.getMonth() + 1) < 9 ? `0${(date.getMonth() + 1)}` : (date.getMonth() + 1)
  const currentMonthName = date.toLocaleString("pt-BR", { month: "long" })

  const nextEventDates = listDateTitle.filter((item: any) => item.date > date).map((item: any) => (item))
  const nextEvent = nextEventDates[nextEventDates.length - 1]

  const { filterDatas, setFilterDatas } = useGlobalContext()
  const lowerSerarch = filterDatas.toLowerCase()
  const catechism = data.filter((item: any) => item.data.title.toLowerCase().includes(lowerSerarch) || item.data.description.toLowerCase().includes(lowerSerarch))



  const {data: session } = useSession()
  if(session){
    return<>
     
      <div className={styles.wrapper} onClick={() => { setFilterDatas('') }}>
      {filterDatas ? <Dropdown dataCatechism={catechism} /> : null}
      <Head>
        <title> Minha Catequese</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header showButton={true} showSearch={true} dataCatechism={data} />
      <main className={styles.container} >      
        <div className={styles.nextEvent}  >
          {data.filter((item: any) => item.data.title == nextEvent.title).map((catechism: any) => (
            <div key={catechism.data.id} >
              <Link href={`${catechism.ref["@ref"].id}`}>
                <MainCard title={catechism.data.title}
                  description={catechism.data.description}
                  date={catechism.data.date}
                  time={catechism.data.time} />
              </Link>
            </div>))
          }
        </div>
        <div className={styles.otherEvents}>
          <div className={styles.textMonthEvents}>
            <span >{currentMonthName}</span>
            <Link href={'/listEvents'}>{'Outros eventos>>'}</Link>
          </div>
        </div>
        <div className={`${styles.list} ${styles.listMonth}`}>
          {data.filter((item: any) => item.data.date.substring(5, 7) === currentMonth).map((catechism: any, indice: number) =>
            <div key={catechism.data.id} >
              <Link href={`/${catechism.ref["@ref"].id}`}>
                <SimpleCard
                  title={catechism.data.title}
                  date={catechism.data.date}
                />
              </Link>
            </div>)
          }
        </div>
      </main>
      <Footer />
    </div>
    </>
  }
  
  return<>
    <>
    
    <div className={styles.login}>
   
         
      <button className={styles.btSignIn} onClick={() => signIn()}>
      <Image alt="logo catequese" width={60} height={60} src="/img/logo.svg" />
      Clique aqui para acessar <br/>
      o App Catquese</button>
    </div>
    </>
  </>




}

export async function getServerSideProps() {

  const res = await fetch(`${process.env.API_URL}`)
  const { data } = await res.json()

  return { props: data }
} 