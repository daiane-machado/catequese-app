import Head from 'next/head'
import Link from 'next/link'
import styles from '../../styles/Home.module.scss'
import { MainCard } from '../components/MainCard'
import { Header } from '../components/Header'
import { useGlobalContext } from '../provider'
import { SimpleCard } from '../components/SimpleCard'
import { useRouter } from 'next/router'
import { useEffect } from 'react'
import Dropdown from '../components/Dropdown'
import Footer from '../components/Footer'
import { useSession } from "next-auth/react"
import SignIn from '../components/SignIn'

interface INewEvnet {
  title: string,
  date: Date,
}

export default function Home({ data }: any) {
  console.log(data)

  const { data: session } = useSession()

  const { updateDatas, filterDatas, setFilterDatas } = useGlobalContext()
  const router = useRouter()

  function refreshData() {
    router.replace(router.asPath)
  }

  useEffect(() => {
    refreshData();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [updateDatas]);

  data.sort(function (a: { data: any | number }, b: { data: any | number }) {
    const timeA = new Date(`${a.data.date}T${a.data.time}`)
    const timeB = new Date(`${b.data.date}T${b.data.time}`)
    return timeB.getTime() - timeA.getTime();
  })

  const listDateTitle: { date: Date, title: string }[] = []
  data.map((item: any) => {
    listDateTitle
      .push({
        date: new Date(`${item.data.date}T${item.data.time}`),
        title: item.data.title
      })
  })
  console.log(listDateTitle)
  const lowerSerarch = filterDatas.toLowerCase()
  const catechism = data.filter((item: any) => item.data.title.toLowerCase().includes(lowerSerarch) || item.data.description.toLowerCase().includes(lowerSerarch))

  const date = new Date()
  const currentMonth = (date.getMonth() + 1) < 9 ? `0${(date.getMonth() + 1)}` : (date.getMonth() + 1)
  const currentMonthName = date.toLocaleString("pt-BR", { month: "long" })

  const empytEvent : INewEvnet = {
    date: new Date(`00-00-00T 00:00`),
        title: ""
  }

  const nextEventDates = listDateTitle.filter((item: any) => item.date > date).map((item: any) => (item))
  const nextEvent =  nextEventDates.length > 0 ? nextEventDates[nextEventDates.length - 1] : empytEvent
    console.log(nextEvent)

  return (
    <div className={styles.wrapper} onClick={() => { setFilterDatas('') }}>
      {filterDatas ? <Dropdown dataCatechism={catechism} /> : null}
      <Head>
        <title> Minha Catequese</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* {session && (
        <> */}
          <Header showButton={true} showSearch={true} dataCatechism={data} />
          <main className={styles.container} >
            <div className={styles.nextEvent}  >
              
              {nextEvent.title === "" ?
              <div  >
              
                <MainCard title={nextEvent.title}
                  description={""}
                  date={"00-00-00T"}
                  time={"00:00"} />
              
            </div> :
              
              data.filter((item: any) => item.data.title == nextEvent.title).map((catechism: any) => (
                <div key={catechism.data.id} >
                  <Link href={`${catechism.ref["@ref"].id}`}>
                    <MainCard title={catechism.data.title}
                      description={catechism.data.description}
                      date={catechism.data.date}
                      time={catechism.data.time} />
                  </Link>
                </div>))
              }
            </div>
            <div className={styles.otherEvents}>
              <div className={styles.textMonthEvents}>
                <span >{currentMonthName}</span>
                <Link href={'/listEvents'}>{'Outros eventos>>'}</Link>
              </div>
            </div>
            <div className={`${styles.list} ${styles.listMonth}`}>
              {data.filter((item: any) => item.data.date.substring(5, 7) === currentMonth).map((catechism: any) =>
                <div key={catechism.data.id} >
                  <Link href={`/${catechism.ref["@ref"].id}`}>
                    <SimpleCard
                      title={catechism.data.title}
                      date={catechism.data.date}
                    />
                  </Link>
                </div>)
              }
            </div>
          </main>
          <Footer />
        {/* </>
      )
      }
      {!session && (
        <SignIn />
      )} */}
    </div>

  )
}

export async function getServerSideProps() {

  const res = await fetch(`${process.env.API_URL}`)
  const { data } = await res.json()

  return { props: data }
} 